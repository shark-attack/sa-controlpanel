{"version":3,"sources":["sa-controlpanel.es6"],"names":[],"mappings":";;;;;;;;;;IAAM,cAAc;cAAd,cAAc;;aAAd,cAAc;8BAAd,cAAc;;mCAAd,cAAc;;;iBAAd,cAAc;;eACH,yBAAG,EACf;;;eAEM,iBAAC,IAAI,EAAE;AACV,gBAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;;AAE/B,eAAG,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;AAC/C,eAAG,CAAC,IAAI,EAAE,CAAC;SACd;;;eAEe,4BAAG;AACf,gBAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AACd,gBAAI,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAC1D,gBAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAC5D,gBAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACzD;;;;;;;eAKc,2BAAG;AACd,gBAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;AAC1B,oBAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aACvC;SAEJ;;;;;eAGc,2BAAG;AACd,gBAAI,CAAC,aAAa,EAAE,CAAC;AACrB,gBAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;;;;;eAGe,4BAAG;;;AACf,gBAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACpD,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACpC,gBAAI,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACxD,gBAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC7B,gBAAI,CAAC,gBAAgB,EAAE,CAAC;;AAExB,gBAAI,CAAC,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,KAAK,EAAI;AAAE,sBAAK,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;aAAE,CAAE,CAAC;AACnG,gBAAI,CAAC,GAAG,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,KAAK,EAAI;AAAE,sBAAK,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;aAAE,CAAE,CAAC;AACpG,gBAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,KAAK,EAAI;AAAE,sBAAK,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;aAAE,CAAE,CAAC;SACpG;;;;;eAIe,4BAAG,EAAE;;;;;eAGG,kCAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;;;WApD/C,cAAc;GAAS,WAAW;;AAwDxC,cAAc,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,QAAQ,CAAC,cAAc,IAAI,QAAQ,CAAC,aAAa,CAAA,CAAE,aAAa,CAAC;AACnG,QAAQ,CAAC,eAAe,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC","file":"sa-controlpanel.js","sourcesContent":["class SAControlPanel extends HTMLElement {\n    setProperties() {\n    };\n\n    runTask(task) {\n        var xhr = new XMLHttpRequest();\n        //xhr.addEventListener('load', () => {});\n        xhr.open(\"get\", 'api/run/?task=' + task, true);\n        xhr.send();\n    };\n\n    registerElements() {\n        this.dom = {};\n        this.dom.packageBtn = this.root.querySelector('#package');\n        this.dom.discoverBtn = this.root.querySelector('#discover');\n        this.dom.cleanBtn = this.root.querySelector('#clean');\n    };\n\n    /**\n     * parse attributes on element\n     */\n    parseAttributes() {\n        if (this.hasAttribute('uri')) {\n            this.uri = this.getAttribute('uri');\n        }\n\n    };\n\n    // Fires when an instance of the element is created.\n    createdCallback() {\n        this.setProperties();\n        this.parseAttributes();\n    };\n\n    // Fires when an instance was inserted into the document.\n    attachedCallback() {\n        let template = this.owner.querySelector('template');\n        this.root = this.createShadowRoot();\n        let clone = document.importNode(template.content, true);\n        this.root.appendChild(clone);\n        this.registerElements();\n\n        this.dom.packageBtn.addEventListener('click', event => { this.runTask(event.currentTarget.id); } );\n        this.dom.discoverBtn.addEventListener('click', event => { this.runTask(event.currentTarget.id); } );\n        this.dom.cleanBtn.addEventListener('click', event => { this.runTask(event.currentTarget.id); } );\n    }\n\n\n    // Fires when an instance was removed from the document.\n    detachedCallback() {};\n\n    // Fires when an attribute was added, removed, or updated.\n    attributeChangedCallback(attr, oldVal, newVal) {};\n\n}\n\nSAControlPanel.prototype.owner = (document._currentScript || document.currentScript).ownerDocument;\ndocument.registerElement('sa-controlpanel', SAControlPanel);\n"],"sourceRoot":"/source/"}